# Testing matrix_mul function

# Importing the matrix_mul function
>>> matrix_mul = __import__('100-matrix_mul').matrix_mul

# Testing matrix multiplication for a valid case
Trying:
    matrix_mul([[1, 2], [3, 4]], [[1, 2], [3, 4]])
Expecting:
    [[7, 10], [15, 22]]

# Testing matrix multiplication for another valid case
Trying:
    matrix_mul([[1, 2]], [[3, 4], [5, 6]])
Expecting:
    [[13, 16]]

# Testing matrix multiplication with empty matrices (raises ValueError)
Trying:
    matrix_mul([], [])
Expecting:
    Traceback (most recent call last):
        ...
    ValueError: m_a can't be empty or m_b can't be empty

# Testing matrix multiplication with non-numeric elements (raises TypeError)
Trying:
    matrix_mul([[1, 'a'], [3, 4]], [[1, 2], [3, 4]])
Expecting:
    Traceback (most recent call last):
        ...
    TypeError: m_a should contain only integers or floats or m_b should contain only integers or floats

# Testing matrix multiplication with non-rectangular matrices (raises TypeError)
Trying:
    matrix_mul([[1, 2], [3, 4]], [[1, 2, 3], [4, 5, 6]])
Expecting:
    Traceback (most recent call last):
        ...
    TypeError: each row of m_a must be of the same size or each row of m_b must be of the same size

# Testing matrix multiplication for matrices that can't be multiplied (raises ValueError)
Trying:
    matrix_mul([[1, 2], [3, 4]], [[5, 6], [7, 8]])
Expecting:
    Traceback (most recent call last):
        ...
    ValueError: m_a and m_b can't be multiplied
